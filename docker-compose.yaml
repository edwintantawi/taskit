version: '2.7'
services:
  api:
    build: .
    restart: always
    depends_on:
      - postgres
    ports:
      - ${PORT}:${PORT}
    environment:
      PORT: ${PORT}
      ALLOWED_ORIGIN: ${ALLOWED_ORIGIN}
      ACCESS_TOKEN_KEY: ${ACCESS_TOKEN_KEY}
      REFRESH_TOKEN_KEY: ${REFRESH_TOKEN_KEY}
      ACCESS_TOKEN_EXPIRATION: ${ACCESS_TOKEN_EXPIRATION}
      REFRESH_TOKEN_EXPIRATION: ${REFRESH_TOKEN_EXPIRATION}
      AUTO_MIGRATE: ${AUTO_MIGRATE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSLMODE: ${POSTGRES_SSLMODE}
  postgres:
    image: 'postgres:15.1'
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  pgadmin:
    image: 'dpage/pgadmin4:6.18'
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
      # throw access log to /dev/null instead of stdout
      # to reduce log noise
      GUNICORN_ACCESS_LOGFILE: '/dev/null'
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
volumes:
  postgres-data:
  pgadmin-data:
